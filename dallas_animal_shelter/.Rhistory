library(readxl)
library(scales, warn.conflicts = F)
library(lubridate,warn.conflicts = F)
library(rvest, warn.conflicts = F, quietly = T)
library(RColorBrewer)
suppressPackageStartupMessages(library(tidyverse,
warn.conflicts = F))
suppressWarnings(data.frame(colname_simple = as.character(colnames(read_excel("week18_dallas_animals.xlsx", sheet = "simple")))) %>%
left_join(data.frame(colname_simple = as.character(colnames(read_excel("week18_dallas_animals.xlsx", sheet = "raw"))),
colname_raw = as.character(colnames(read_excel("week18_dallas_animals.xlsx", sheet = "raw")))),
by = "colname_simple"))
#check that rows are the same length
nrow(read_excel("week18_dallas_animals.xlsx", sheet = "simple")) == nrow(read_excel("week18_dallas_animals.xlsx", sheet = "raw"))
o_dallas_animals <- read_excel("week18_dallas_animals.xlsx", sheet = "raw", na = "NA")
o_dallas_animals <- o_dallas_animals %>%
select(-c(kennel_status, tag_type, activity_number, activity_sequence, source_id,
census_tract, receipt_number, impound_number, service_request_number,
chip_status, year)) %>%
rename(year = mo_year)
glimpse(o_dallas_animals)
dallas_animals <- o_dallas_animals %>%
mutate(intake_day = wday(intake_date, label = TRUE),
outcome_day = wday(outcome_date, label = TRUE),
total_time = difftime(outcome_date, intake_date, units = "days"))
dog_breed <- dallas_animals %>%
filter(animal_type == "DOG") %>%
count(animal_breed) %>%
rename(count_dogs = n) %>%
arrange(desc(count_dogs)) %>%
mutate(percent_dogs = round(count_dogs/sum(count_dogs), 2),
cum_percent = cumsum(percent_dogs),
new_breed = ifelse(cum_percent > 0.8, "OTHER", animal_breed))
dallas_animals <- dallas_animals %>%
left_join(dog_breed %>%
select(animal_breed, new_breed),
by = "animal_breed")
dallas_animals %>% count(intake_date) %>%
ggplot(aes(x = intake_date, y = n)) +
geom_line() +
geom_smooth(method = 'loess') +
ggtitle("Intake Time Series") +
xlab("Intake Date") +
ylab("Number of Animals") +
theme(plot.title = element_text(face="bold")) +
theme_bw()
dallas_animals %>% count(intake_type) %>%   #count the number of animals
ggplot(aes(x = reorder(intake_type, n), y = n)) +
geom_bar(stat = "identity") +             #create a bar graph
geom_text(aes(label = comma(n)),          #add labels to the graph with a 1,000's comma
position = position_dodge(0.9),
vjust = 0.1,
hjust = -0.2) +
ggtitle("Intake Types") +
xlab("Intake Type") +
ylab("Number of Animals") +
scale_y_continuous(labels = comma, limits = c(0, 25000)) +
theme(plot.title = element_text(face="bold")) +
theme_bw() +
coord_flip()
dallas_animals %>% filter(intake_type == "STRAY" | intake_type == "OWNER SURRENDER") %>%
ggplot(aes(x = intake_day, fill = intake_type)) +
geom_bar() +
facet_wrap( ~ intake_type) +
ggtitle("Intake Type by Day") +
xlab("Intake Day") +
ylab("Number of Animals") +
labs(fill = "Intake Type") +
scale_y_continuous(labels = comma) +
theme_bw() +
theme(plot.title = element_text(face="bold")) +
scale_fill_brewer(palette="Set1")
dallas_animals %>% count(animal_type) %>%   #count the number of animals
ggplot(aes(x = animal_type, y = n)) +
geom_bar(stat = "identity") +             #create a bar graph
geom_text(aes(label = comma(n)),          #add labels to the graph with a 1,000's comma
position = position_dodge(0.9),
vjust = -0.3) +
ggtitle("Animal Intake Types") +
xlab("Animal Type") +
ylab("Number of Animals") +
scale_y_continuous(labels = comma) +
theme(plot.title = element_text(face="bold")) +
theme_bw()
dallas_animals %>%
filter(animal_type == "DOG") %>%
count(new_breed) %>%   #count the number of animals
ggplot(aes(x = reorder(new_breed, n), y = n)) +
geom_bar(stat = "identity") +             #create a bar graph
geom_text(aes(label = comma(n)),          #add labels to the graph with a 1,000's comma
position = position_dodge(0.9),
vjust = 0.1,
hjust = -0.2) +
ggtitle("Count of Dog Breeds") +
xlab("Dog Breed") +
ylab("Number of Animals") +
scale_y_continuous(labels = comma, limits = c(0, 6500)) +
theme(plot.title = element_text(face="bold")) +
theme_bw() +
coord_flip()
dallas_animals %>%
filter(animal_type == "DOG" & (intake_type == "STRAY" | intake_type == "OWNER SURRENDER")) %>%
add_count(new_breed) %>%
group_by(intake_type, new_breed) %>%
summarise(percent_dogs = n()/mean(n)) %>%
ggplot(aes(x = intake_type,
y = new_breed,
fill = percent_dogs)) +
geom_tile() +
ggtitle("Dog Breed by Intake Types") +
xlab("Intake Type") +
ylab("Animal Breed") +
labs(fill = "Pct. of Dogs") +
theme_bw() +
theme(plot.title = element_text(face="bold"),
axis.text.x = element_text(angle = 45)) +
scale_fill_gradient(low = "white", high = "steelblue")
dallas_animals %>%
group_by(outcome_type) %>%
summarize(avg_time = round(mean(total_time, na.rm = T), 2)) %>%
arrange(desc(avg_time)) %>%
filter(outcome_type != "OTHER") %>%
data.frame()
dallas_animals %>%
group_by(outcome_type) %>%
summarize(avg_time = round(mean(total_time, na.rm = T), 2)) %>%
arrange(desc(avg_time)) %>%
filter(outcome_type != "OTHER") %>%
data.frame()
dallas_animals %>%
filter(!is.na(total_time) & (outcome_type == "ADOPTION" | outcome_type == "EUTHANIZED")) %>%
ggplot(aes(x = as.numeric(total_time), fill = outcome_type)) +
geom_histogram(bins = 20, position = "dodge") +
facet_wrap( ~ outcome_type) +
ggtitle("Histogram of Time at Shelter by Top Outcomes") +
xlab("Time at Shelter") +
ylab("Number of Animals") +
scale_y_continuous(labels = comma) +
theme_bw() +
theme(plot.title = element_text(face="bold"))
dallas_animals %>%
filter(animal_type == "DOG" & !is.na(outcome_type) & outcome_type == "ADOPTION") %>%
group_by(new_breed) %>%
summarize(avg_time = as.numeric(mean(total_time, na.rm = T))) %>%
ggplot(aes(x = reorder(new_breed, avg_time), y = avg_time)) +
geom_bar(stat = "identity") +             #create a bar graph
geom_text(aes(label = round(avg_time, 2)),          #add labels to the graph with a 1,000's comma
position = position_dodge(0.9),
vjust = 0.1,
hjust = -0.2) +
ggtitle("Average Time at Shelter Before Adoption") +
xlab("Dog Breed") +
ylab("Number of Days") +
scale_y_continuous(limits = c(0, 12)) +
theme(plot.title = element_text(face="bold")) +
theme_bw() +
coord_flip()
dallas_animals %>%
filter(animal_type == "DOG" & !is.na(outcome_date)) %>%
add_count(new_breed) %>%
add_count(new_breed, outcome_type) %>%
rename(count_dog_breed = n,
count_outcome_breed = nn) %>%
mutate(adopt_ratio = count_outcome_breed/count_dog_breed) %>%
filter(outcome_type == "ADOPTION" & count_dog_breed >= 300) %>%
ggplot(aes(x = adopt_ratio, y = as.numeric(total_time), color = new_breed))+
geom_jitter() +
ggtitle("Adoption Ratio by Adoption Days") +
xlab("Adoption Ratio") +
ylab("Number of Days") +
labs(colour = "Dog Breed") +
theme(plot.title = element_text(face="bold")) +
theme_bw()
dallas_animals %>%
filter(animal_type == "DOG" & !is.na(outcome_date)) %>%
add_count(new_breed)
dallas_animals %>%
filter(animal_type == "DOG" & !is.na(outcome_date)) %>%
add_count(new_breed) %>%
add_count(new_breed, outcome_type)
dallas_animals %>%
filter(animal_type == "DOG" & !is.na(outcome_date)) %>%
add_count(new_breed)
dallas_animals %>%
filter(animal_type == "DOG" & !is.na(outcome_date)) %>%
add_count(new_breed) %>%
add_count(new_breed, outcome_type)
dallas_animals %>%
filter(animal_type == "DOG" & !is.na(outcome_date)) %>%
add_count(new_breed, name = "count_dog_breed") %>%
add_count(new_breed, outcome_type, name = "count_outcome_breed")
dallas_animals %>%
filter(animal_type == "DOG" & !is.na(outcome_date)) %>%
add_count(new_breed, name = "count_dog_breed") %>%
add_count(new_breed, outcome_type, name = "count_outcome_breed") %>%
mutate(adopt_ratio = count_outcome_breed/count_dog_breed) %>%
filter(outcome_type == "ADOPTION" & count_dog_breed >= 300) %>%
ggplot(aes(x = adopt_ratio, y = as.numeric(total_time), color = new_breed))+
geom_jitter() +
ggtitle("Adoption Ratio by Adoption Days") +
xlab("Adoption Ratio") +
ylab("Number of Days") +
labs(colour = "Dog Breed") +
theme(plot.title = element_text(face="bold")) +
theme_bw()
dallas_animals %>% filter(!is.na(outcome_date)) %>% count(outcome_date) %>%
ggplot(aes(x = outcome_date, y = n)) +
geom_line() +
geom_smooth(method = 'loess') +
ggtitle("Outcome Time Series") +
xlab("Outcome Date") +
ylab("Number of Animals") +
theme(plot.title = element_text(face="bold")) +
theme_bw()
holidays <- read.csv("usholidays.csv", stringsAsFactors = F)
holidays <- holidays %>% select(Date, Holiday) %>% mutate(Date = ymd(Date)) %>%
inner_join(dallas_animals %>%
select(outcome_date) %>%
mutate(outcome_date = ymd(outcome_date)),
by = c("Date" = "outcome_date")) %>%
distinct()
dallas_animals %>%
filter(!is.na(outcome_date) & outcome_type == "ADOPTION") %>%
count(outcome_date) %>%
ggplot(aes(x = outcome_date, y = n)) +
geom_line() +
geom_smooth(method = 'loess') +
ggtitle("Adoptoin Around Holidays") +
xlab("Outcome Date") +
ylab("Number of Animals") +
theme_bw() +
theme(plot.title = element_text(face="bold")) +
geom_vline(aes(xintercept = as.POSIXct(Date)), colour = "magenta1", data = holidays) +
ggrepel::geom_label_repel(aes(x = as.POSIXct(Date), label = Holiday),
colour = "grey37", y = 150, data = holidays)
dallas_animals %>% count(outcome_type) %>%   #count the number of animals
ggplot(aes(x = reorder(outcome_type, n), y = n)) +
geom_bar(stat = "identity") +             #create a bar graph
geom_text(aes(label = comma(n)),          #add labels to the graph with a 1,000's comma
position = position_dodge(0.9),
vjust = 0.1,
hjust = -0.2) +
ggtitle("Outcome Types") +
xlab("Outcome Type") +
ylab("Number of Animals") +
scale_y_continuous(labels = comma, limits = c(0, 12500)) +
theme(plot.title = element_text(face="bold")) +
theme_bw() +
coord_flip()
dallas_animals %>%
filter(animal_type == "DOG" & (outcome_type == "ADOPTION" | outcome_type == "EUTHANIZED")) %>%
add_count(new_breed) %>%
group_by(outcome_type, new_breed) %>%
summarise(percent_dogs = n()/mean(n)) %>%
ggplot(aes(x = outcome_type,
y = new_breed,
fill = percent_dogs)) +
geom_tile() +
ggtitle("Dog Breed by Outcome Types") +
xlab("Outcome Type") +
ylab("Dog Breed") +
labs(fill='Pct. of Dogs') +
theme_bw() +
theme(plot.title = element_text(face="bold"),
axis.text.x = element_text(angle = 45)) +
scale_fill_gradient(low = "white", high = "steelblue")
dallas_animals %>% filter(outcome_type == "ADOPTION" & !is.na(outcome_date)) %>%
ggplot(aes(x = outcome_day)) +
geom_bar() +
ggtitle("Adoption by Day") +
xlab("Day of Week") +
ylab("Number of Animals") +
scale_y_continuous(labels = comma) +
theme_bw() +
theme(plot.title = element_text(face="bold")) +
scale_fill_brewer(palette="Set1")
library(readxl)
library(scales, warn.conflicts = F)
library(lubridate,warn.conflicts = F)
library(rvest, warn.conflicts = F, quietly = T)
library(RColorBrewer)
suppressPackageStartupMessages(library(tidyverse,
warn.conflicts = F))
suppressWarnings(data.frame(colname_simple = as.character(colnames(read_excel("data/week18_dallas_animals.xlsx", sheet = "simple")))) %>%
left_join(data.frame(colname_simple = as.character(colnames(read_excel("data/week18_dallas_animals.xlsx", sheet = "raw"))),
colname_raw = as.character(colnames(read_excel("data/week18_dallas_animals.xlsx", sheet = "raw")))),
by = "colname_simple"))
nrow(read_excel("data/week18_dallas_animals.xlsx", sheet = "simple")) == nrow(read_excel("week18_dallas_animals.xlsx", sheet = "raw"))
nrow(read_excel("data/week18_dallas_animals.xlsx", sheet = "simple")) == nrow(read_excel("data/week18_dallas_animals.xlsx", sheet = "raw"))
